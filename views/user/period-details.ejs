<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>تفاصيل الفترة - نظام إدارة الوجبات</title>
  <!-- Bootstrap CSS RTL -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css">
  <!-- Bootstrap Icons -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <!-- Custom Responsive CSS -->
  <link rel="stylesheet" href="/css/responsive.css">
  <style>
    /* Participant filter styling - highlight entire participant row */
    .participant-row.filtered-participant {
      background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
      border: 2px solid #2196f3;
      border-radius: 6px;
      font-weight: bold;
    }
    
    /* Filter tags styling */
    .filter-tag {
      transition: all 0.2s ease;
      cursor: default;
      font-size: 12px;
      background-color: #e9ecef !important;
      border-color: #dee2e6 !important;
    }
    
    .filter-tag:hover {
      background-color: #f8f9fa !important;
    }
    
    .filter-tag .remove-filter {
      transition: all 0.2s ease;
      cursor: pointer;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: #dc3545;
      color: white;
      border: none;
    }
    
    .filter-tag .remove-filter:hover {
      transform: scale(1.1);
      background-color: #c82333;
    }
    
    /* Search collapse styling */
    #searchHeader:hover {
      background-color: #f8f9fa;
    }
    
    /* Mobile layout adjustments */
    @media (max-width: 767px) {
      /* Ensure filter inputs are properly sized on mobile */
      #mealsFilterForm .form-control-sm,
      #mealsFilterForm .form-select-sm {
        min-height: 44px; /* Better touch target */
      }
    }
  </style>
</head>
<body style="display:flex;flex-direction:column;min-height:100vh;">
<div id="interactive-bg"></div>
<%- include('../navbar', { activePage: 'period-details' }) %>
<div class="main-content flex-grow-1 container-fluid py-4">
        <div class="row">
            <div class="col-12 col-lg-10 offset-lg-1">
                <!-- Period Header -->
                <div class="period-header">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                    <h1 class="mb-0">
                        فترة <%= period.leaderName %>
                        <% if (period.isActive) { %>
                            <span class="badge bg-success">نشط</span>
                        <% } %>
                    </h1>
                    <% if (typeof userId !== 'undefined' && userId && period.leaderId && period.leaderId.toString() === userId.toString()) { %>
                        <a href="/leader/period/<%= period._id %>/edit" class="btn btn-outline-primary">
                            <i class="bi bi-pencil"></i> تعديل الفترة
                        </a>
                    <% } %>
                </div>
                <div class="mb-4">
                    <div class="text-muted">
                        <%= new Date(period.startDate).toLocaleDateString() %> - 
                        <%= new Date(period.endDate).toLocaleDateString() %>
                    </div>
                    <% if (period.description) { %>
                        <div class="mt-2"><%= period.description %></div>
                    <% } %>
                </div>
                
                <!-- Cost Breakdown - Mobile Top, Desktop Side -->
                <div class="row mb-4 d-md-none">
                    <div class="col-12">
                        <div class="stats-card p-3" style="background: white; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h5 class="mb-0">عرض تفاصيل التكلفة</h5>
                                <button class="btn btn-outline-secondary btn-sm" id="download-breakdown-mobile"><i class="bi bi-download"></i> تنزيل CSV</button>
                            </div>
                            <table class="table table-striped mb-0" id="breakdown-table-mobile">
                                <thead class="table-light">
                                    <tr>
                                        <th>المشارك</th>
                                        <th>التكاليف العادية</th>
                                        <th>تكاليف النثريات</th>
                                        <th>الإجمالي</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% Object.entries(periodStats.participantStats).forEach(([user, data]) => { %>
                                    <tr>
                                        <td>
                                            <%= user %>
                                            <div class="text-muted small">(<%= data.mealCount %> وجبات)</div>
                                        </td>
                                        <td>$<%= data.normalCosts.toFixed(2) %></td>
                                        <td>$<%= data.otherCosts.toFixed(2) %></td>
                                        <td>$<%= data.totalCosts.toFixed(2) %></td>
                                    </tr>
                                    <% }); %>
                                </tbody>
                                <tfoot class="table-light">
                                    <tr>
                                        <th>الإجمالي</th>
                                        <th>$<%= periodStats.totalNormalCost.toFixed(2) %></th>
                                        <th>$<%= periodStats.totalOthersCost.toFixed(2) %></th>
                                        <th>$<%= periodStats.totalCost.toFixed(2) %></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
                
                <!-- Meals Section -->
                <div class="row g-4 align-items-stretch">
                    <!-- Generate participants list once -->
                    <% 
                    // Get unique participants from all meals
                    const allParticipants = new Set();
                    meals.forEach(meal => {
                        meal.participants.forEach(p => allParticipants.add(p.name));
                    });
                    const sortedParticipants = Array.from(allParticipants).sort();
                    %>
                    <!-- Cost Breakdown - Desktop Right Side (hidden on mobile) -->
                    <div class="col-12 col-lg-4 d-none d-md-flex flex-column order-lg-2">
                        <div class="stats-card h-100 p-3" style="background: white; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h5 class="mb-0">عرض تفاصيل التكلفة</h5>
                                <button class="btn btn-outline-secondary btn-sm" id="download-breakdown"><i class="bi bi-download"></i> تنزيل CSV</button>
                            </div>
                            <table class="table table-striped mb-0" id="breakdown-table">
                                <thead class="table-light">
                                    <tr>
                                        <th>المشارك</th>
                                        <th>التكاليف العادية</th>
                                        <th>تكاليف النثريات</th>
                                        <th>الإجمالي</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% Object.entries(periodStats.participantStats).forEach(([user, data]) => { %>
                                    <tr>
                                        <td>
                                            <%= user %>
                                            <div class="text-muted small">(<%= data.mealCount %> وجبات)</div>
                                        </td>
                                        <td>$<%= data.normalCosts.toFixed(2) %></td>
                                        <td>$<%= data.otherCosts.toFixed(2) %></td>
                                        <td>$<%= data.totalCosts.toFixed(2) %></td>
                                    </tr>
                                    <% }); %>
                                </tbody>
                                <tfoot class="table-light">
                                    <tr>
                                        <th>الإجمالي</th>
                                        <th>$<%= periodStats.totalNormalCost.toFixed(2) %></th>
                                        <th>$<%= periodStats.totalOthersCost.toFixed(2) %></th>
                                        <th>$<%= periodStats.totalCost.toFixed(2) %></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                    <!-- Meals Grid and Search Section -->
                    <div class="col-12 col-lg-8 order-lg-1">
                        <!-- Desktop: Always visible search -->
                        <div class="d-none d-md-block mb-3">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="mb-0">
                                        <i class="bi bi-search me-2"></i>بحث
                                    </h6>
                                </div>
                                <div class="card-body p-3">
                                    <form id="mealsFilterFormDesktop" class="d-flex flex-column gap-3">
                                        <!-- Filter Inputs Row -->
                                        <div class="d-flex flex-column flex-md-row gap-2">
                                            <div class="flex-fill">
                                                <label for="filterDateDesktop" class="form-label mb-1">التاريخ</label>
                                                <input type="date" class="form-control form-control-sm" id="filterDateDesktop">
                                            </div>
                                            <div class="flex-fill">
                                                <label for="filterTypeDesktop" class="form-label mb-1">نوع الوجبة</label>
                                                <select class="form-select form-select-sm" id="filterTypeDesktop">
                                                    <option value="">الكل</option>
                                                    <option value="breakfast">فطور</option>
                                                    <option value="lunch">غداء</option>
                                                    <option value="dinner">عشاء</option>
                                                    <option value="other">أخرى</option>
                                                </select>
                                            </div>
                                            <div class="flex-fill">
                                                <label for="filterParticipantDesktop" class="form-label mb-1">المشارك</label>
                                                <select class="form-select form-select-sm" id="filterParticipantDesktop">
                                                    <option value="">الكل</option>
                                                    <% sortedParticipants.forEach(participant => { %>
                                                    <option value="<%= participant %>"><%= participant %></option>
                                                    <% }); %>
                                                </select>
                                            </div>
                                        </div>
                                        <!-- Active Filters Display -->
                                        <div id="activeFiltersDesktop" class="d-flex flex-wrap gap-2" style="display: none !important;">
                                            <!-- Filter tags will be added here dynamically -->
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <!-- Mobile: Foldable search -->
                        <div class="d-md-none mb-3">
                            <div class="card">
                                <div class="card-header p-2" id="searchHeader" style="cursor: pointer;">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h6 class="mb-0">
                                            <i class="bi bi-search me-2"></i>بحث
                                        </h6>
                                        <i class="bi bi-chevron-down" id="searchToggleIcon"></i>
                                    </div>
                                </div>
                                <div class="collapse" id="searchCollapse">
                                    <div class="card-body p-3">
                                        <form id="mealsFilterForm" class="d-flex flex-column gap-3">
                                            <!-- Filter Inputs Row -->
                                            <div class="d-flex flex-column flex-md-row gap-2">
                                                <div class="flex-fill">
                                                    <label for="filterDate" class="form-label mb-1">التاريخ</label>
                                                    <input type="date" class="form-control form-control-sm" id="filterDate">
                                                </div>
                                                <div class="flex-fill">
                                                    <label for="filterType" class="form-label mb-1">نوع الوجبة</label>
                                                    <select class="form-select form-select-sm" id="filterType">
                                                        <option value="">الكل</option>
                                                        <option value="breakfast">فطور</option>
                                                        <option value="lunch">غداء</option>
                                                        <option value="dinner">عشاء</option>
                                                        <option value="other">أخرى</option>
                                                    </select>
                                                </div>
                                                <div class="flex-fill">
                                                    <label for="filterParticipant" class="form-label mb-1">المشارك</label>
                                                    <select class="form-select form-select-sm" id="filterParticipant">
                                                        <option value="">الكل</option>
                                                        <% sortedParticipants.forEach(participant => { %>
                                                        <option value="<%= participant %>"><%= participant %></option>
                                                        <% }); %>
                                                    </select>
                                                </div>
                                            </div>
                                            <!-- Active Filters Display -->
                                            <div id="activeFilters" class="d-flex flex-wrap gap-2" style="display: none !important;">
                                                <!-- Filter tags will be added here dynamically -->
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Meals Grid with horizontal scroll -->
                        <div class="overflow-auto" style="white-space:nowrap; max-width:100vw;">
                            <div class="row row-cols-1 row-cols-md-2 g-4 flex-nowrap" id="mealsGrid">
                                <% meals.forEach(meal => { %>
                                <div class="col meal-card" 
                                     data-meal-date="<%= meal.date.toISOString().slice(0,10) %>" 
                                     data-meal-type="<%= meal.type %>"
                                     data-meal-participants="<%= meal.participants.map(p => p.name).join(',') %>"
                                     style="display:inline-block; float:none;">
                                    <div class="card h-100 meal-summary shadow-sm" id="meal-<%= meal._id %>">
                                        <div class="card-header bg-transparent border-bottom-0 d-flex justify-content-between align-items-center">
                                            <div>
                                                <span class="badge rounded-pill text-bg-<%= 
                                                    meal.type === 'breakfast' ? 'warning' : 
                                                    meal.type === 'lunch' ? 'info' : 
                                                    meal.type === 'dinner' ? 'primary' : 
                                                    'secondary' %>">
                                                    <i class="bi bi-<%= 
                                                        meal.type === 'breakfast' ? 'sun' : 
                                                        meal.type === 'lunch' ? 'brightness-high' : 
                                                        meal.type === 'dinner' ? 'moon' : 
                                                        'clock' %>"></i>
                                                    <%= meal.type.charAt(0).toUpperCase() + meal.type.slice(1) %>
                                                </span>
                                                <small class="text-muted ms-2">
                                                    <%= meal.date.toLocaleDateString() %>
                                                </small>
                                            </div>
                                            <button class="btn btn-outline-secondary btn-sm download-meal" data-meal-id="meal-<%= meal._id %>"><i class="bi bi-download"></i> تنزيل</button>
                                        </div>
                                        <div class="card-body">
                                            <h5 class="card-title mb-3"><%= meal.name %></h5>
                                            <div class="mb-3">
                                                <h6 class="card-subtitle mb-2 text-muted">
                                                    <i class="bi bi-basket me-1"></i> المكونات
                                                </h6>
                                                <ul class="list-group mb-2">
                                                    <% meal.ingredients.forEach(ing => { %>
                                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                                        <span>
                                                            <strong><%= ing.name %></strong>
                                                            <span class="text-muted small ms-2">(<%= ing.ingredientType %>)</span>
                                                        </span>
                                                        <span class="badge <%= ing.ingredientType === 'other' ? 'text-bg-info' : 'text-bg-primary' %>">$<%= ing.price.toFixed(2) %></span>
                                                    </li>
                                                    <% }); %>
                                                </ul>
                                            </div>
                                            <!-- Meal Cost Summary -->
                                            <div class="mb-3">
                                                <h6 class="card-subtitle mb-2 text-muted">
                                                    <i class="bi bi-cash me-1"></i> تكلفة الوجبة
                                                </h6>
                                                <div class="d-flex gap-2 flex-wrap">
                                                    <span class="badge bg-secondary">عادي: $<%= meal.normalTotalCost.toFixed(2) %></span>
                                                    <span class="badge bg-info">نثريات: $<%= meal.otherTotalCost.toFixed(2) %></span>
                                                    <span class="badge bg-primary">الإجمالي: $<%= meal.totalCost.toFixed(2) %></span>
                                                </div>
                                            </div>
                                            <div class="mb-3">
                                                <h6 class="card-subtitle mb-2 text-muted">
                                                    <i class="bi bi-people me-1"></i> المشاركون
                                                </h6>
                                                <ul class="list-group mb-2">
                                                    <% meal.participants.forEach(p => { 
                                                        const normalShare = p.normalShare || (meal.normalTotalCost / meal.participants.length);
                                                    %>
                                                    <li class="list-group-item d-flex justify-content-between align-items-center participant-row" data-participant-name="<%= p.name %>">
                                                        <span><%= p.name %></span>
                                                        <span class="badge bg-secondary">$<%= normalShare.toFixed(2) %></span>
                                                    </li>
                                                    <% }); %>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <% }); %>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
    </div>
</div>
<%- include('../footer') %>
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>
<script src="/js/particles-bg.js"></script>
    <script>
        // Enhanced Meals Filter with Immediate Filtering and Filter Tags
        // Add event listeners for immediate filtering
        // Add event listeners for mobile filter inputs
        document.getElementById('filterDate').addEventListener('change', function() {
            updateActiveFilters();
            filterMeals();
        });
        
        document.getElementById('filterType').addEventListener('change', function() {
            updateActiveFilters();
            filterMeals();
        });
        
        document.getElementById('filterParticipant').addEventListener('change', function() {
            updateActiveFilters();
            filterMeals();
        });

        // Add event listeners for desktop filter inputs
        document.getElementById('filterDateDesktop').addEventListener('change', function() {
            updateActiveFiltersDesktop();
            filterMeals();
        });
        
        document.getElementById('filterTypeDesktop').addEventListener('change', function() {
            updateActiveFiltersDesktop();
            filterMeals();
        });
        
        document.getElementById('filterParticipantDesktop').addEventListener('change', function() {
            updateActiveFiltersDesktop();
            filterMeals();
        });

        // Add event listeners for individual filter removal
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('remove-filter')) {
                const filterType = e.target.dataset.filterType;
                const filterValue = e.target.dataset.filterValue;
                const isDesktop = e.target.closest('#activeFiltersDesktop');
                
                // Clear the corresponding input based on which container the filter is in
                if (isDesktop) {
                    if (filterType === 'date') {
                        document.getElementById('filterDateDesktop').value = '';
                    } else if (filterType === 'type') {
                        document.getElementById('filterTypeDesktop').value = '';
                    } else if (filterType === 'participant') {
                        document.getElementById('filterParticipantDesktop').value = '';
                    }
                    updateActiveFiltersDesktop();
                } else {
                    if (filterType === 'date') {
                        document.getElementById('filterDate').value = '';
                    } else if (filterType === 'type') {
                        document.getElementById('filterType').value = '';
                    } else if (filterType === 'participant') {
                        document.getElementById('filterParticipant').value = '';
                    }
                    updateActiveFilters();
                }
                
                filterMeals();
            }
        });

        function updateActiveFilters() {
            const activeFiltersContainer = document.getElementById('activeFilters');
            const dateValue = document.getElementById('filterDate').value;
            const typeValue = document.getElementById('filterType').value;
            const participantValue = document.getElementById('filterParticipant').value;
            
            // Clear existing filter tags
            activeFiltersContainer.innerHTML = '';
            
            // Add filter tags for active filters
            if (dateValue) {
                addFilterTag('date', dateValue, `التاريخ: ${new Date(dateValue).toLocaleDateString('ar-SA')}`, false);
            }
            
            if (typeValue) {
                const typeLabels = {
                    'breakfast': 'فطور',
                    'lunch': 'غداء',
                    'dinner': 'عشاء',
                    'other': 'أخرى'
                };
                addFilterTag('type', typeValue, `النوع: ${typeLabels[typeValue] || typeValue}`, false);
            }
            
            if (participantValue) {
                addFilterTag('participant', participantValue, `المشارك: ${participantValue}`, false);
            }
            
            // Show/hide the active filters container
            if (activeFiltersContainer.children.length > 0) {
                activeFiltersContainer.style.display = 'flex';
            } else {
                activeFiltersContainer.style.display = 'none';
            }
        }

        function updateActiveFiltersDesktop() {
            const activeFiltersContainer = document.getElementById('activeFiltersDesktop');
            const dateValue = document.getElementById('filterDateDesktop').value;
            const typeValue = document.getElementById('filterTypeDesktop').value;
            const participantValue = document.getElementById('filterParticipantDesktop').value;
            
            // Clear existing filter tags
            activeFiltersContainer.innerHTML = '';
            
            // Add filter tags for active filters
            if (dateValue) {
                addFilterTag('date', dateValue, `التاريخ: ${new Date(dateValue).toLocaleDateString('ar-SA')}`, true);
            }
            
            if (typeValue) {
                const typeLabels = {
                    'breakfast': 'فطور',
                    'lunch': 'غداء',
                    'dinner': 'عشاء',
                    'other': 'أخرى'
                };
                addFilterTag('type', typeValue, `النوع: ${typeLabels[typeValue] || typeValue}`, true);
            }
            
            if (participantValue) {
                addFilterTag('participant', participantValue, `المشارك: ${participantValue}`, true);
            }
            
            // Show/hide the active filters container
            if (activeFiltersContainer.children.length > 0) {
                activeFiltersContainer.style.display = 'flex';
            } else {
                activeFiltersContainer.style.display = 'none';
            }
        }

        function addFilterTag(filterType, filterValue, displayText, isDesktop = false) {
            const activeFiltersContainer = document.getElementById(isDesktop ? 'activeFiltersDesktop' : 'activeFilters');
            const filterTag = document.createElement('div');
            filterTag.className = 'filter-tag d-flex align-items-center gap-1 px-2 py-1 bg-light border rounded-pill';
            filterTag.innerHTML = `
                <span class="small">${displayText}</span>
                <button type="button" class="btn btn-sm btn-outline-danger remove-filter p-0" 
                        data-filter-type="${filterType}" data-filter-value="${filterValue}" 
                        style="width: 16px; height: 16px; font-size: 10px; line-height: 1;">
                    ×
                </button>
            `;
            activeFiltersContainer.appendChild(filterTag);
        }
        
        function filterMeals() {
            // Get values from both desktop and mobile inputs, prioritizing desktop if both are set
            const dateValue = document.getElementById('filterDateDesktop').value || document.getElementById('filterDate').value;
            const typeValue = document.getElementById('filterTypeDesktop').value || document.getElementById('filterType').value;
            const participantValue = document.getElementById('filterParticipantDesktop').value || document.getElementById('filterParticipant').value;

            // First, clear all participant highlighting
            document.querySelectorAll('.participant-row').forEach(participantRow => {
                participantRow.classList.remove('filtered-participant');
            });

            document.querySelectorAll('.meal-card').forEach(card => {
                const mealDate = card.dataset.mealDate;
                const mealType = card.dataset.mealType;
                const mealParticipants = card.dataset.mealParticipants.split(',');
                
                const dateMatch = !dateValue || mealDate === dateValue;
                const typeMatch = !typeValue || mealType === typeValue;
                const participantMatch = !participantValue || mealParticipants.includes(participantValue);

                if (dateMatch && typeMatch && participantMatch) {
                    card.style.display = 'inline-block';
                    
                    // Highlight specific participant rows if participant filter is active
                    if (participantValue) {
                        const participantRows = card.querySelectorAll('.participant-row');
                        participantRows.forEach(participantRow => {
                            if (participantRow.dataset.participantName === participantValue) {
                                participantRow.classList.add('filtered-participant');
                            }
                        });
                    }
                } else {
                    card.style.display = 'none';
                }
            });
        }

        // Download Breakdown - Desktop
        document.getElementById('download-breakdown').addEventListener('click', function() {
            downloadBreakdownCSV('breakdown-table');
        });
        
        // Download Breakdown - Mobile
        document.getElementById('download-breakdown-mobile').addEventListener('click', function() {
            downloadBreakdownCSV('breakdown-table-mobile');
        });
        
        function downloadBreakdownCSV(tableId) {
            let csv = 'المشارك,التكاليف العادية,تكاليف النثريات,الإجمالي\n';
            document.querySelectorAll(`#${tableId} tbody tr`).forEach(tr => {
                const cells = tr.querySelectorAll('td');
                const user = cells[0].innerText.split('\n')[0];
                const normal = cells[1].innerText;
                const other = cells[2].innerText;
                const total = cells[3].innerText;
                csv += `"${user}","${normal}","${other}","${total}"\n`;
            });
            const link = document.createElement('a');
            link.href = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);
            link.download = 'cost-breakdown.csv';
            link.click();
        }

        // Search collapse functionality
        document.getElementById('searchHeader').addEventListener('click', function() {
            const collapse = document.getElementById('searchCollapse');
            const icon = document.getElementById('searchToggleIcon');
            
            if (collapse.classList.contains('show')) {
                collapse.classList.remove('show');
                icon.classList.remove('bi-chevron-up');
                icon.classList.add('bi-chevron-down');
            } else {
                collapse.classList.add('show');
                icon.classList.remove('bi-chevron-down');
                icon.classList.add('bi-chevron-up');
            }
        });

        // Download Meal Summary
        document.querySelectorAll('.download-meal').forEach(button => {
            button.addEventListener('click', function() {
                const mealId = this.dataset.mealId;
                const mealElement = document.getElementById(mealId);

                if (mealElement) {
                    html2canvas(mealElement).then(canvas => {
                        const mealCard = mealElement.closest('.meal-card');
                        const date = mealCard.dataset.mealDate;
                        const type = mealCard.dataset.mealType;
                        
                        const link = document.createElement('a');
                        link.href = canvas.toDataURL();
                        link.download = `${date} - ${type}.png`;
                        link.click();
                    });
                }
            });
        });

    particlesJS('interactive-bg', {
        particles: {
            number: { value: 120, density: { enable: true, value_area: 800 } },
            color: { value: '#000' },
            shape: { type: 'circle' },
            opacity: { value: 0.3, random: true },
            size: { value: 3, random: true },
            line_linked: {
                enable: true,
                distance: 120,
                color: '#000',
                opacity: 0.18,
                width: 1
            },
            move: {
                enable: true,
                speed: 2,
                direction: 'none',
                random: false,
                straight: false,
                out_mode: 'out',
                bounce: false,
                attract: { enable: true, rotateX: 600, rotateY: 1200 }
            }
        },
        interactivity: {
            detect_on: 'canvas',
            events: {
                onhover: { enable: true, mode: ['grab', 'bubble', 'repulse'] },
                onclick: { enable: true, mode: 'push' },
                resize: true
            },
            modes: {
                grab: { distance: 140, line_linked: { opacity: 0.35 } },
                bubble: { distance: 200, size: 6, duration: 2, opacity: 0.6, speed: 3 },
                repulse: { distance: 100, duration: 0.4 },
                push: { particles_nb: 4 }
            }
        },
        retina_detect: true
    });
    </script>
<style>
  .main-content { flex: 1 0 auto; }
</style>
</body>
</html>